# Basic Airflow configuration.
# WARNING: This configuration is for local development. Do not use it in a production deployment.
---
version: '3.8'
services:
  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    volumes:
      - ~/dev/mnt_data/tiny_analytics_platform/min_custom/postgresql/data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "airflow"]
      interval: 5s
      retries: 5
    restart: always
    networks:
      - tapd_net
  pgadmin:
    container_name: pgadmin
    image: 'dpage/pgadmin4:5.1'
    environment:
      PGADMIN_DEFAULT_EMAIL: some@gmail.com
      PGADMIN_DEFAULT_USERNAME: pgadmin
      PGADMIN_DEFAULT_PASSWORD: pgadmin
    restart: unless-stopped
    depends_on: 
      - postgres
    ports:
      - 9103:80
    networks:
      - tapd_net
  airflow:
    build: ./airflow
    environment:
      - AIRFLOW__WEBSERVER__EXPOSE_CONFIG=True
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres/airflow
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION=True
      - AIRFLOW__CORE__LOAD_EXAMPLES=False
      - AIRFLOW__API__ENABLE_EXPERIMENTAL_API=True
      - AIRFLOW__API__AUTH_BACKENDS=airflow.api.auth.backend.basic_auth
    ports:
      - 8251:8080
    volumes:
      - ./airflow/assets/dags:/opt/airflow/dags # airflow
      - ~/dev/mnt_data/tiny_analytics_platform/min_custom/airflow/logs:/opt/airflow/logs # airflow
      - ./airflow/assets/bigdata_pylib:/opt/mnt/bigdata/pylib # support libs 
      - ~/dev/mnt_data/tiny_analytics_platform/raw_data:/opt/mnt/raw_data # all raw data, examples, generated scenarios
    depends_on: 
      - postgres
    healthcheck:
        test: ["CMD-SHELL", "[ -f /opt/airflow/airflow-webserver.pid ]"]
        interval: 30s
        timeout: 30s
        retries: 3
    restart: always
    networks:
      - tapd_net

  
  api_main:
    container_name: api_main
    build:
      context: ./api_main
      dockerfile: Dockerfile
    #  args:
    #    - DEBUG=${DEBUG}
    environment:
      - DATABASE_URL=postgresql://tapd:tapd@postgres/tapd
      - AIRFLOW_API_URL_IN_NETWORK=http://airflow:8080/api/v1/
      - AIRFLOW_API_URL_FROM_HOST=http://localhost:8251/api/v1/
      - AIRFLOW_USERNAME=admin
      - AIRFLOW_PASSWORD=airflow
    env_file:
     - ~/dev/.env_openai_creds
    volumes:
     - ./api_main/app:/opt/app
     - ~/dev/mnt_data/tiny_analytics_platform/min_custom/api_main/download:/opt/download/
    #command: ["python", "server.py"]
    depends_on: 
      - postgres
    ports:
      - 8099:5000
    networks:
      - tapd_net

  client_nextjs:
    container_name: client_nextjs
    build:
      context: ./client_nextjs
      dockerfile: Dockerfile
    #volumes:
    #  - './client/app:/usr/src/app'
    ports:
      - 3000:3000
    environment:
      - DATABASE_URL=postgres://airflow:airflow@postgres/airflow
    depends_on:
      - postgres
    networks:
      - tapd_net

  mongo:
    image: mongo
    container_name: mongodb
    environment:
      MONGO_INITDB_DATABASE: platform
      MONGO_INITDB_ROOT_USERNAME: mgadmin      
      MONGO_INITDB_ROOT_PASSWORD: mgpass
    volumes:
      - ./mongodb/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo-js:ro # onboard script
      - ~/dev/mnt_data/tiny_analytics_platform/min_custom/mongodb/data:/data/db 
    ports:
      - 27017:27017
    restart: always
    networks:
      - tapd_net
  
  mongo-express:
    image: mongo-express
    ports:
      - 8411:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: mgadmin
      ME_CONFIG_MONGODB_ADMINPASSWORD: mgpass
      ME_CONFIG_MONGODB_URL: mongodb://mgadmin:mgpass@mongo:27017/
    restart: always
    networks:
      - tapd_net

  jupyter-spark:
    image: jupyter/pyspark-notebook:python-3.10.8
    ports:
      - "8252:8888"
      - "4040-4080:4040-4080"
    volumes:
      - ~/dev/mnt_data/tiny_analytics_platform/min_custom/notebooks:/opt/notebooks/
      #- ~/dev/mnt_data/tiny_analytics_platform/min_custom/spark/resources/data:/opt/spark/data/
      #- ~/dev/mnt_data/tiny_analytics_platform/min_custom/spark/resources/jars:/opt/spark/jars/
    networks:
      - tapd_net

networks:
    tapd_net:
